class Item {
  String name;
  int country;
  
  Item() {
    name = "";
    country = -1;
  }
  
  Item(String nm, int cty) {
    name = nm;
    country = cty;
  }
}

class Kenji {
  String chn;
  Item [] items;
  int x,y;
  int state;
  
  Kenji() { 
    chn="";
    items = new Item[0];
    x = 0;
    y = 0;
  };
  
  Kenji( String ln) {
    chn = "";
    items = new Item[0];
    ParsingLine(ln);
    x = 0;
    y = 0;
  }
  
  void ParsingLine( String ln) {
    String[] hsh = split(ln,',');
    chn = hsh[0];
    //println(hsh[0]);
    for( int i=1; i< hsh.length; i++) {
      String[] tmp = split(hsh[i],'/');
      //println(i+hsh[i]+tmp.length);
      for( int j=0; j<tmp.length; j++) {
        if( tmp[j].length() <= 0) 
          continue;
        //println(i+" "+j+" "+tmp[j]);
        Item tmpItem = new Item(tmp[j],i-1);
        items = (Item []) append(items, tmpItem);
      }
    }
    x = 0;
    y = 0;
  }
  
  void draw() {
    noStroke();
    fill(164,165,160,100);
    textSize(48);
    text(chn, x+4, y+60-12);
    fill(241,244,247,100);
    rect(x+1,y+1,58,58); 
  }
  
  void grow(int ps) {
    float ll = items.length;
    for( int ii = 0; ii < items.length; ii ++) {
      float xx = 480*offset_xx[ii];
      float yy = 160*offset_yy[ii];
      fill(fontcolor[items[ii].country][0],fontcolor[items[ii].country][1],fontcolor[items[ii].country][2],ps*20);
      textSize(12);
      if(xx+x+2+60>=720) {
        xx=-(0.4*480-xx);
      }
      if(yy+y+20-2>=600) {
        yy=-yy+32;
      }
      text(cnty_map[items[ii].country] + ": " + items[ii].name + ".", xx+x+2, yy+y+20-2);
    }    
    noStroke();
    fill(255-64,255-65,255-60,100);
    textSize(48);
    text(chn, x+4, y+60-12);
    fill(14,11,8,255-ps*20);
    rect(x+1,y+1,58,58); 
  }
}

String [] lines;
Kenji [] data;
PFont font;
int preIdx, curIdx;
int phase;
float [] offset_xx = { 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.0, 0.2, 0.4, 0.4, 0.4, 0.4, 0.6, 0.6, 0.6, 0.6};
float [] offset_yy = { 0.4, 0.4, 0.5, 0.5, 0.6, 0.6, 0.7, 0.7, 0.8, 0.8, 0.9, 0.9, 1.0, 1.0, 0.4, 0.5, 0.6, 0.7, 0.4, 0.5, 0.6, 0.7};
String [] cnty_map = {"CN","TW","HK","MO","SG","MY","VN","KR"};
float [][] fontcolor = {
  {115, 0, 70},
  {191,187,17},
  {255,194,0},
  {232,136,1},
  {201,60,0},
  {76,9,156},
  {1,142,232},
  {0,64,105}
};


void setup()
{
  frameRate(15);

  lines = new String[0];
  data = new Kenji[0];
  size(720,640);
  background(125);
  fill(255);
  smooth();
  
  lines = loadStrings("gv_i3.txt");
  
//  offset_xx = new float[20];
//  offset_yy = new float[20];
//  int numOfRdm = 0;
//  float tmp_xx, tmp_yy, distance;
//  boolean valid = true;
//  while( numOfRdm < 20) {
//    valid = true;
//    tmp_xx = random(2.0)-1;
//    tmp_yy = random(2.0);
//    
//    for( int i = 0; i < numOfRdm; i++) {
//      distance = dist( tmp_xx*0.2, tmp_yy, offset_xx[i]*0.2, offset_yy[i]);
//      if( distance<0.1) {
//        valid = false;
//        break;
//      }
//      if( tmp_yy<0.4) {
//        valid = false;
//        break;
//      }
//    }
//    
//    if( valid) {
//      offset_xx[numOfRdm] = tmp_xx;
//      offset_yy[numOfRdm] = tmp_yy;
//      println(numOfRdm + " " + offset_xx[numOfRdm] + " " + offset_yy[numOfRdm]);
//      numOfRdm ++;
//    }
//  }
  
  //parsing lines
  for( int i=0; i<lines.length; i++) {
    //println(lines[i]);
    data = (Kenji [] ) append( data, new Kenji(lines[i]));
    data[i].x = int(i/10) * 60;
    data[i].y = (i%10) * 60;
  }
 
  //list the fonts
  String[] fontList = PFont.list();
  //println(fontList);
  
  phase = 0;
  preIdx = -1;
  curIdx = -1;
  
  //compatity
  font = loadFont("Arial");
  textFont( font);
}

void draw()
{
  //allocate each kenji
  //println(data.length);
  
  if(mouseX > 0 && mouseX < 720 && mouseY > 0 && mouseY < 600) {
    curIdx = int(mouseX/60)*10+int(mouseY/60);
    if (preIdx != curIdx) {
      phase = 0;
    }
    preIdx = curIdx;
  } else {
    curIdx = -1;
    preIdx = curIdx;
    phase = 0;
  }
  
  //println( curIdx + " " + preIdx + " " + phase);
  
  for( int i=0; i<data.length; i++) {
    if(curIdx == i) {
      continue;
    } else {
      data[i].draw();
    }
  }
  for( int i=0; i<data.length; i++) {
    if(curIdx == i) {
      data[i].grow(phase);
      phase = phase+1;
      if(phase >= 12) {
        phase = 12;
      }
    } 
  }
  
  //println("Hello Errorlog!");
  drawLegend();
}

void drawLegend() {
  //String [] cnty_map = {"CN","TW","HK","MO","SG","MY","VN","KR"};
  textSize(12);
  fill(fontcolor[0][0],fontcolor[0][1],fontcolor[0][2]);
  text("CN: China Mainland",20,616);
  fill(fontcolor[1][0],fontcolor[1][1],fontcolor[1][2]);
  text("TW: Taiwan",20,632);
  fill(fontcolor[2][0],fontcolor[2][1],fontcolor[2][2]);
  text("HK: Hong Kong",180, 616);
  fill(fontcolor[3][0],fontcolor[3][1],fontcolor[3][2]);
  text("MO: Macao",180, 632);
  fill(fontcolor[4][0],fontcolor[4][1],fontcolor[4][2]);
  text("SG: Singapore", 340, 616);
  fill(fontcolor[5][0],fontcolor[5][1],fontcolor[5][2]);
  text("MY: Malaysia", 340, 632);
  fill(fontcolor[6][0],fontcolor[6][1],fontcolor[6][2]);
  text("VN: Vietnam", 500, 616);
  fill(fontcolor[7][0],fontcolor[7][1],fontcolor[7][2]);
  text("KR: Korea", 500, 632);
}


